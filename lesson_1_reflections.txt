1. How did viewing a diff between two versions of a file help you see the bug that was introduced?
A- diff showed the two files and I coould compare and see where they were different.

2. How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
A- You are able to go through previous code. This is useful if there is an error in the current version and you don't know what's up. You can also program without worrying about making a mistake because you can always refer to previous code.

3. What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
A- Pros: you only save what you need to, you do not have unnecessary versions of files 
Cons: you may forget to save often enough and so may lose info or may not  have a good record of what was changed and when.

4. Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
A- somew files may be related or something in all the files may have changed at the same time

5. How can you use the commands git log and git diff to view the history of files?
A- use git log to find the commit that reverted the controls. Then use git diff to compare the changes 

6. How might using version control make you more confident to make changes that could break something?
A- I can always go back and find where I broke it and recover the last working code before the 'break'

7. How Do You Want to Use Git?
A- To save old versions of code

8.
A-